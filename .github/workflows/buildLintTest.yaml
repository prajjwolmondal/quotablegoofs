# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: Build, lint, and test

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  
jobs:

  build_lint_and_test:
    name: Builds the project, runs a few linters and the tests
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.23'

    - name: Build
      run: go build -v ./...
      
    - name: Vet app
      run: go vet -v ./...

    - name: Run Gosec Security Scanner
      uses: securego/gosec@master

    - name: Run Staticcheck
      uses: dominikh/staticcheck-action@v1.3.1
      with:
        version: "latest"
        install-go: false

    - name: Test
      run: go test -v ./...

# This is split out into a separate job as the devs recommend it
  golangci_lint:
    name: Runs the golangci-lint
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.23'

    - name: Run golangci-lint
      uses: golangci/golangci-lint-action@v6
      with:
        version: v1.60